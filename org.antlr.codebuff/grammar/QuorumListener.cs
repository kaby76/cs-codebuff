//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Quorum.g4 by ANTLR 4.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="QuorumParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6")]
[System.CLSCompliant(false)]
public interface IQuorumListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="QuorumParser.start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStart([NotNull] QuorumParser.StartContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QuorumParser.start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStart([NotNull] QuorumParser.StartContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QuorumParser.package_rule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPackage_rule([NotNull] QuorumParser.Package_ruleContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QuorumParser.package_rule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPackage_rule([NotNull] QuorumParser.Package_ruleContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QuorumParser.reference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReference([NotNull] QuorumParser.ReferenceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QuorumParser.reference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReference([NotNull] QuorumParser.ReferenceContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>FullClassDeclaration</c>
	/// labeled alternative in <see cref="QuorumParser.class_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFullClassDeclaration([NotNull] QuorumParser.FullClassDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>FullClassDeclaration</c>
	/// labeled alternative in <see cref="QuorumParser.class_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFullClassDeclaration([NotNull] QuorumParser.FullClassDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>NoClassDeclaration</c>
	/// labeled alternative in <see cref="QuorumParser.class_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNoClassDeclaration([NotNull] QuorumParser.NoClassDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>NoClassDeclaration</c>
	/// labeled alternative in <see cref="QuorumParser.class_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNoClassDeclaration([NotNull] QuorumParser.NoClassDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>NoActionsNoClass</c>
	/// labeled alternative in <see cref="QuorumParser.no_class_stmnts"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNoActionsNoClass([NotNull] QuorumParser.NoActionsNoClassContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>NoActionsNoClass</c>
	/// labeled alternative in <see cref="QuorumParser.no_class_stmnts"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNoActionsNoClass([NotNull] QuorumParser.NoActionsNoClassContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ActionsNoClass</c>
	/// labeled alternative in <see cref="QuorumParser.no_class_stmnts"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterActionsNoClass([NotNull] QuorumParser.ActionsNoClassContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ActionsNoClass</c>
	/// labeled alternative in <see cref="QuorumParser.no_class_stmnts"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitActionsNoClass([NotNull] QuorumParser.ActionsNoClassContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QuorumParser.inherit_stmnts"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInherit_stmnts([NotNull] QuorumParser.Inherit_stmntsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QuorumParser.inherit_stmnts"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInherit_stmnts([NotNull] QuorumParser.Inherit_stmntsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QuorumParser.inherit_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInherit_stmt([NotNull] QuorumParser.Inherit_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QuorumParser.inherit_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInherit_stmt([NotNull] QuorumParser.Inherit_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QuorumParser.access_modifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAccess_modifier([NotNull] QuorumParser.Access_modifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QuorumParser.access_modifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAccess_modifier([NotNull] QuorumParser.Access_modifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QuorumParser.class_stmnts"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClass_stmnts([NotNull] QuorumParser.Class_stmntsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QuorumParser.class_stmnts"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClass_stmnts([NotNull] QuorumParser.Class_stmntsContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Action</c>
	/// labeled alternative in <see cref="QuorumParser.method_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAction([NotNull] QuorumParser.ActionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Action</c>
	/// labeled alternative in <see cref="QuorumParser.method_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAction([NotNull] QuorumParser.ActionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>BlueprintAction</c>
	/// labeled alternative in <see cref="QuorumParser.method_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlueprintAction([NotNull] QuorumParser.BlueprintActionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>BlueprintAction</c>
	/// labeled alternative in <see cref="QuorumParser.method_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlueprintAction([NotNull] QuorumParser.BlueprintActionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>NativeAction</c>
	/// labeled alternative in <see cref="QuorumParser.method_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNativeAction([NotNull] QuorumParser.NativeActionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>NativeAction</c>
	/// labeled alternative in <see cref="QuorumParser.method_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNativeAction([NotNull] QuorumParser.NativeActionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Constructor</c>
	/// labeled alternative in <see cref="QuorumParser.method_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstructor([NotNull] QuorumParser.ConstructorContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Constructor</c>
	/// labeled alternative in <see cref="QuorumParser.method_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstructor([NotNull] QuorumParser.ConstructorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QuorumParser.method_shared"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethod_shared([NotNull] QuorumParser.Method_sharedContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QuorumParser.method_shared"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethod_shared([NotNull] QuorumParser.Method_sharedContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QuorumParser.formal_parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFormal_parameter([NotNull] QuorumParser.Formal_parameterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QuorumParser.formal_parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFormal_parameter([NotNull] QuorumParser.Formal_parameterContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QuorumParser.qualified_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQualified_name([NotNull] QuorumParser.Qualified_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QuorumParser.qualified_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQualified_name([NotNull] QuorumParser.Qualified_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QuorumParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock([NotNull] QuorumParser.BlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QuorumParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock([NotNull] QuorumParser.BlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QuorumParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] QuorumParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QuorumParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] QuorumParser.StatementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>VariableSoloFunctionCall</c>
	/// labeled alternative in <see cref="QuorumParser.solo_method_call"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableSoloFunctionCall([NotNull] QuorumParser.VariableSoloFunctionCallContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>VariableSoloFunctionCall</c>
	/// labeled alternative in <see cref="QuorumParser.solo_method_call"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableSoloFunctionCall([NotNull] QuorumParser.VariableSoloFunctionCallContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ParentVariableSoloFunctionCall</c>
	/// labeled alternative in <see cref="QuorumParser.solo_method_call"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParentVariableSoloFunctionCall([NotNull] QuorumParser.ParentVariableSoloFunctionCallContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ParentVariableSoloFunctionCall</c>
	/// labeled alternative in <see cref="QuorumParser.solo_method_call"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParentVariableSoloFunctionCall([NotNull] QuorumParser.ParentVariableSoloFunctionCallContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QuorumParser.solo_method_required_method_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSolo_method_required_method_part([NotNull] QuorumParser.Solo_method_required_method_partContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QuorumParser.solo_method_required_method_part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSolo_method_required_method_part([NotNull] QuorumParser.Solo_method_required_method_partContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QuorumParser.alert_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlert_statement([NotNull] QuorumParser.Alert_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QuorumParser.alert_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlert_statement([NotNull] QuorumParser.Alert_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QuorumParser.check_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCheck_statement([NotNull] QuorumParser.Check_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QuorumParser.check_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCheck_statement([NotNull] QuorumParser.Check_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QuorumParser.detect_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDetect_statement([NotNull] QuorumParser.Detect_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QuorumParser.detect_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDetect_statement([NotNull] QuorumParser.Detect_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QuorumParser.always_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlways_statement([NotNull] QuorumParser.Always_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QuorumParser.always_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlways_statement([NotNull] QuorumParser.Always_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QuorumParser.print_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrint_statement([NotNull] QuorumParser.Print_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QuorumParser.print_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrint_statement([NotNull] QuorumParser.Print_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QuorumParser.speak_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSpeak_statement([NotNull] QuorumParser.Speak_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QuorumParser.speak_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSpeak_statement([NotNull] QuorumParser.Speak_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QuorumParser.return_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturn_statement([NotNull] QuorumParser.Return_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QuorumParser.return_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturn_statement([NotNull] QuorumParser.Return_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QuorumParser.generic_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGeneric_declaration([NotNull] QuorumParser.Generic_declarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QuorumParser.generic_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGeneric_declaration([NotNull] QuorumParser.Generic_declarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QuorumParser.generic_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGeneric_statement([NotNull] QuorumParser.Generic_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QuorumParser.generic_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGeneric_statement([NotNull] QuorumParser.Generic_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QuorumParser.class_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClass_type([NotNull] QuorumParser.Class_typeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QuorumParser.class_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClass_type([NotNull] QuorumParser.Class_typeContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>GenericAssignmentDeclaration</c>
	/// labeled alternative in <see cref="QuorumParser.assignment_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGenericAssignmentDeclaration([NotNull] QuorumParser.GenericAssignmentDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>GenericAssignmentDeclaration</c>
	/// labeled alternative in <see cref="QuorumParser.assignment_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGenericAssignmentDeclaration([NotNull] QuorumParser.GenericAssignmentDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>IntegerAssignmentDeclaration</c>
	/// labeled alternative in <see cref="QuorumParser.assignment_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIntegerAssignmentDeclaration([NotNull] QuorumParser.IntegerAssignmentDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>IntegerAssignmentDeclaration</c>
	/// labeled alternative in <see cref="QuorumParser.assignment_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIntegerAssignmentDeclaration([NotNull] QuorumParser.IntegerAssignmentDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>NumberAssignmentDeclaration</c>
	/// labeled alternative in <see cref="QuorumParser.assignment_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumberAssignmentDeclaration([NotNull] QuorumParser.NumberAssignmentDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>NumberAssignmentDeclaration</c>
	/// labeled alternative in <see cref="QuorumParser.assignment_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumberAssignmentDeclaration([NotNull] QuorumParser.NumberAssignmentDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>TextAssignmentDeclaration</c>
	/// labeled alternative in <see cref="QuorumParser.assignment_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTextAssignmentDeclaration([NotNull] QuorumParser.TextAssignmentDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>TextAssignmentDeclaration</c>
	/// labeled alternative in <see cref="QuorumParser.assignment_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTextAssignmentDeclaration([NotNull] QuorumParser.TextAssignmentDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>BooleanAssignmentDeclaration</c>
	/// labeled alternative in <see cref="QuorumParser.assignment_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBooleanAssignmentDeclaration([NotNull] QuorumParser.BooleanAssignmentDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>BooleanAssignmentDeclaration</c>
	/// labeled alternative in <see cref="QuorumParser.assignment_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBooleanAssignmentDeclaration([NotNull] QuorumParser.BooleanAssignmentDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>NoTypeAssignment</c>
	/// labeled alternative in <see cref="QuorumParser.assignment_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNoTypeAssignment([NotNull] QuorumParser.NoTypeAssignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>NoTypeAssignment</c>
	/// labeled alternative in <see cref="QuorumParser.assignment_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNoTypeAssignment([NotNull] QuorumParser.NoTypeAssignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ParentAssignment</c>
	/// labeled alternative in <see cref="QuorumParser.assignment_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParentAssignment([NotNull] QuorumParser.ParentAssignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ParentAssignment</c>
	/// labeled alternative in <see cref="QuorumParser.assignment_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParentAssignment([NotNull] QuorumParser.ParentAssignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ObjectAssignment</c>
	/// labeled alternative in <see cref="QuorumParser.assignment_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterObjectAssignment([NotNull] QuorumParser.ObjectAssignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ObjectAssignment</c>
	/// labeled alternative in <see cref="QuorumParser.assignment_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitObjectAssignment([NotNull] QuorumParser.ObjectAssignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>NormalAssignment</c>
	/// labeled alternative in <see cref="QuorumParser.assignment_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNormalAssignment([NotNull] QuorumParser.NormalAssignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>NormalAssignment</c>
	/// labeled alternative in <see cref="QuorumParser.assignment_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNormalAssignment([NotNull] QuorumParser.NormalAssignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QuorumParser.if_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIf_statement([NotNull] QuorumParser.If_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QuorumParser.if_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIf_statement([NotNull] QuorumParser.If_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QuorumParser.elseif_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElseif_statement([NotNull] QuorumParser.Elseif_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QuorumParser.elseif_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElseif_statement([NotNull] QuorumParser.Elseif_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QuorumParser.else_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElse_statement([NotNull] QuorumParser.Else_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QuorumParser.else_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElse_statement([NotNull] QuorumParser.Else_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QuorumParser.loop_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLoop_statement([NotNull] QuorumParser.Loop_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QuorumParser.loop_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLoop_statement([NotNull] QuorumParser.Loop_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QuorumParser.initial_parent_action_call"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInitial_parent_action_call([NotNull] QuorumParser.Initial_parent_action_callContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QuorumParser.initial_parent_action_call"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInitial_parent_action_call([NotNull] QuorumParser.Initial_parent_action_callContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QuorumParser.action_call"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAction_call([NotNull] QuorumParser.Action_callContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QuorumParser.action_call"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAction_call([NotNull] QuorumParser.Action_callContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Cast</c>
	/// labeled alternative in <see cref="QuorumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCast([NotNull] QuorumParser.CastContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Cast</c>
	/// labeled alternative in <see cref="QuorumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCast([NotNull] QuorumParser.CastContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Null</c>
	/// labeled alternative in <see cref="QuorumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNull([NotNull] QuorumParser.NullContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Null</c>
	/// labeled alternative in <see cref="QuorumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNull([NotNull] QuorumParser.NullContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Multiplication</c>
	/// labeled alternative in <see cref="QuorumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultiplication([NotNull] QuorumParser.MultiplicationContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Multiplication</c>
	/// labeled alternative in <see cref="QuorumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultiplication([NotNull] QuorumParser.MultiplicationContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Addition</c>
	/// labeled alternative in <see cref="QuorumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAddition([NotNull] QuorumParser.AdditionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Addition</c>
	/// labeled alternative in <see cref="QuorumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAddition([NotNull] QuorumParser.AdditionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Or</c>
	/// labeled alternative in <see cref="QuorumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOr([NotNull] QuorumParser.OrContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Or</c>
	/// labeled alternative in <see cref="QuorumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOr([NotNull] QuorumParser.OrContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ParenthesisExpression</c>
	/// labeled alternative in <see cref="QuorumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParenthesisExpression([NotNull] QuorumParser.ParenthesisExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ParenthesisExpression</c>
	/// labeled alternative in <see cref="QuorumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParenthesisExpression([NotNull] QuorumParser.ParenthesisExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Inherits</c>
	/// labeled alternative in <see cref="QuorumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInherits([NotNull] QuorumParser.InheritsContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Inherits</c>
	/// labeled alternative in <see cref="QuorumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInherits([NotNull] QuorumParser.InheritsContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>String</c>
	/// labeled alternative in <see cref="QuorumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterString([NotNull] QuorumParser.StringContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>String</c>
	/// labeled alternative in <see cref="QuorumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitString([NotNull] QuorumParser.StringContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Integer</c>
	/// labeled alternative in <see cref="QuorumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInteger([NotNull] QuorumParser.IntegerContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Integer</c>
	/// labeled alternative in <see cref="QuorumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInteger([NotNull] QuorumParser.IntegerContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>VariableFunctionCall</c>
	/// labeled alternative in <see cref="QuorumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableFunctionCall([NotNull] QuorumParser.VariableFunctionCallContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>VariableFunctionCall</c>
	/// labeled alternative in <see cref="QuorumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableFunctionCall([NotNull] QuorumParser.VariableFunctionCallContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Input</c>
	/// labeled alternative in <see cref="QuorumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInput([NotNull] QuorumParser.InputContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Input</c>
	/// labeled alternative in <see cref="QuorumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInput([NotNull] QuorumParser.InputContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Not</c>
	/// labeled alternative in <see cref="QuorumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNot([NotNull] QuorumParser.NotContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Not</c>
	/// labeled alternative in <see cref="QuorumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNot([NotNull] QuorumParser.NotContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Equals</c>
	/// labeled alternative in <see cref="QuorumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEquals([NotNull] QuorumParser.EqualsContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Equals</c>
	/// labeled alternative in <see cref="QuorumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEquals([NotNull] QuorumParser.EqualsContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Decimal</c>
	/// labeled alternative in <see cref="QuorumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDecimal([NotNull] QuorumParser.DecimalContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Decimal</c>
	/// labeled alternative in <see cref="QuorumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDecimal([NotNull] QuorumParser.DecimalContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>And</c>
	/// labeled alternative in <see cref="QuorumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnd([NotNull] QuorumParser.AndContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>And</c>
	/// labeled alternative in <see cref="QuorumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnd([NotNull] QuorumParser.AndContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Me</c>
	/// labeled alternative in <see cref="QuorumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMe([NotNull] QuorumParser.MeContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Me</c>
	/// labeled alternative in <see cref="QuorumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMe([NotNull] QuorumParser.MeContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Greater</c>
	/// labeled alternative in <see cref="QuorumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGreater([NotNull] QuorumParser.GreaterContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Greater</c>
	/// labeled alternative in <see cref="QuorumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGreater([NotNull] QuorumParser.GreaterContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Boolean</c>
	/// labeled alternative in <see cref="QuorumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolean([NotNull] QuorumParser.BooleanContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Boolean</c>
	/// labeled alternative in <see cref="QuorumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolean([NotNull] QuorumParser.BooleanContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>InputNoParameters</c>
	/// labeled alternative in <see cref="QuorumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInputNoParameters([NotNull] QuorumParser.InputNoParametersContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>InputNoParameters</c>
	/// labeled alternative in <see cref="QuorumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInputNoParameters([NotNull] QuorumParser.InputNoParametersContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ParentVariableFunctionCall</c>
	/// labeled alternative in <see cref="QuorumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParentVariableFunctionCall([NotNull] QuorumParser.ParentVariableFunctionCallContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ParentVariableFunctionCall</c>
	/// labeled alternative in <see cref="QuorumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParentVariableFunctionCall([NotNull] QuorumParser.ParentVariableFunctionCallContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Minus</c>
	/// labeled alternative in <see cref="QuorumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMinus([NotNull] QuorumParser.MinusContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Minus</c>
	/// labeled alternative in <see cref="QuorumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMinus([NotNull] QuorumParser.MinusContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QuorumParser.function_expression_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction_expression_list([NotNull] QuorumParser.Function_expression_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QuorumParser.function_expression_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction_expression_list([NotNull] QuorumParser.Function_expression_listContext context);
}
